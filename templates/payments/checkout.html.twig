{% extends 'base.html.twig' %}

{% block body %}

<div class="container">
    <div class="row">
        <div class="col">
            <div class="card-body">
            <form action="{{ path("subscription_payment", {'id': article.id }) }}" method="post" id="payment-form">
                <div class= "form-row">

                    <div id="card-elements" class="StripeElement"></div>      
                    
                    <script src="https://js.stripe.com/v3"></script>

                    <div id="card-errors" role="alert"></div>
                <button class="btn btn-primary"> Acheter {{article.price}} â‚¬ </button>
                </div>
            </form>
            </div>
            
        </div>
    </div>
</div>
{% endblock %}


{% block javascripts %}
<script>

        document.addEventListener("DOMContentLoaded", function () {
            // Wait for the document to load

            // Check if the Stripe.js script has loaded
            if (typeof Stripe !== "undefined") {
                // Your public key
                var stripePublicKey = "{{ stripe_public_key_test }}"; // Replace with your public key

                // Initialize Stripe with your public key
                var stripe = Stripe(stripePublicKey);

                // Create an instance of Stripe Elements
                var elements = stripe.elements();

                // Now you can use 'stripe' and 'elements' to work with Stripe Elements
            } else {
                // Stripe.js script not loaded, handle the error
                console.error("Stripe.js script has not loaded.");
            }
        });

    {% if app_environement == 'dev' %}
        var stripeToken = "{{ stripe_public_key_test }}";
    {% else %}
        var stripeToken = "{{ stripe_public_key_live }}";
    {% endif %}
    
    var stripe = Stripe(stripeToken);
    var elements = stripe.elements();
    var subscription = "{{ article.id }}";
    var clientSecret = "{{ intentSecret }}";
    var cardholderEmail = "{{ app.user.email }}"


    console.log('clientSecret', clientSecret);

    var styleCustom = {
        base: {
            fontSize: '16px',
            color: '#25332d'
        }
    }

    var card = elements.create("card", {style: styleCustom });
    card.mount("#card-elements");
    
    card.addEventListener('change', function(event){
        var displayError = document.getElementById('card-errors');

        if(event.error) {

            displayError.textContent = event.error.message;

        } else {

            displayError.textContent = '';
        }
    });

    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function(event) {
        event.preventDefault();
        stripe.handleCardPayment(
            clientSecret,
            card,
            {
                payment_method_data: {
                    billing_details: {
                        email: cardholderEmail
                    }
                }
            }
        ).then((result) => {
            if(result.error) {
                // Display error
            } else if ('paymentIntent' in result) {
                console.log('Result :', result);
                stripeTokenHandler(result.paymentIntent);

                console.log('Result paymentIntent :', result.paymentIntent);
            }
        })
    });

    function stripeTokenHandler(intent) {

        var form = document.getElementById('payment-form');
        var InputIntentId = document.createElement('input');
        var InputIntentPaymentMethod = document.createElement('input');
        var InputIntentStatus = document.createElement('input');
        var InputSubscription = document.createElement('input');

        InputIntentId.setAttribute('type', 'hidden');
        InputIntentId.setAttribute('name', 'stripeIntentId');
        InputIntentId.setAttribute('value', intent.id);
        
        InputIntentPaymentMethod.setAttribute('type', 'hidden');
        InputIntentPaymentMethod.setAttribute('name', 'stripeIntentPaymentMethod');
        InputIntentPaymentMethod.setAttribute('value', intent.payment_method);

        InputIntentStatus.setAttribute('type', 'hidden');
        InputIntentStatus.setAttribute('name', 'stripeIntentStatus');
        InputIntentStatus.setAttribute('value', intent.status);

        InputSubscription.setAttribute('type', 'hidden');
        InputSubscription.setAttribute('name', 'subscription');
        InputSubscription.setAttribute('value', subscription);


        form.appendChild(InputIntentId);
        form.appendChild(InputIntentPaymentMethod);
        form.appendChild(InputIntentStatus);
        form.appendChild(InputSubscription);
        form.submit();
    }

</script>
{% endblock %}